;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 06.10.2019 19:17:23
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28EB      	GOTO       235
_interrupt:
;Main.c,63 :: 		volatile void interrupt()
;Main.c,65 :: 		if (TMR1IF_bit)
0x0004	0x3180      	MOVLP      0
0x0005	0x0020      	MOVLB      0
0x0006	0x1C11      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x0007	0x280F      	GOTO       L_interrupt0
;Main.c,72 :: 		TMR1H         = 0x63;   // preload for 10ms (63C0 @ 16Mhz)
0x0008	0x3063      	MOVLW      99
0x0009	0x0097      	MOVWF      TMR1H
;Main.c,73 :: 		TMR1L         = 0xC0;   //  ""
0x000A	0x30C0      	MOVLW      192
0x000B	0x0096      	MOVWF      TMR1L
;Main.c,75 :: 		guiTimer10ms++;
0x000C	0x0AA2      	INCF       _guiTimer10ms, 1
0x000D	0x1903      	BTFSC      STATUS, 2
0x000E	0x0AA3      	INCF       _guiTimer10ms+1, 1
;Main.c,77 :: 		}
L_interrupt0:
;Main.c,78 :: 		TMR1IF_bit = 0;      // clear int after proc
0x000F	0x1011      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;Main.c,80 :: 		}
L_end_interrupt:
L__interrupt20:
0x0010	0x0009      	RETFIE     %s
; end of _interrupt
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0011	0x301D      	MOVLW      29
0x0012	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0013	0x0BFD      	DECFSZ     R13, 1
0x0014	0x2813      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0015	0x0008      	RETURN
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0016	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x0017	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x0018	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x0019	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x001A	0x2816      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x001B	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x001C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x001D	0x2816      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x001E	0x0008      	RETURN
; end of ___CC2DW
_Init_uP:
;Init_up.c,2 :: 		void Init_uP(void) { //Initializes microcontroller
;Init_up.c,17 :: 		PORTA = 0;      // all outputs low
0x001F	0x0020      	MOVLB      0
0x0020	0x018C      	CLRF       PORTA
;Init_up.c,18 :: 		PORTC = 0;
0x0021	0x018E      	CLRF       PORTC
;Init_up.c,19 :: 		ANSELA = 0;   // PortA all digital input, (this is not default)
0x0022	0x0023      	MOVLB      3
0x0023	0x018C      	CLRF       ANSELA
;Init_up.c,20 :: 		ANSELC = 0;   // Same PortC (ADC enable is a different thing)
0x0024	0x018E      	CLRF       ANSELC
;Init_up.c,27 :: 		OSCCON = 0b01111100; // PLL off, 16 Mhz, clock source defined in config
0x0025	0x307C      	MOVLW      124
0x0026	0x0021      	MOVLB      1
0x0027	0x0099      	MOVWF      OSCCON
;Init_up.c,32 :: 		OPTION_REG = 0b10000000;  // 7: weak pull ups disabled (if 1))
0x0028	0x3080      	MOVLW      128
0x0029	0x0095      	MOVWF      OPTION_REG
;Init_up.c,33 :: 		WPUA = 0b00000000;        // wpua's off
0x002A	0x0024      	MOVLB      4
0x002B	0x018C      	CLRF       WPUA
;Init_up.c,38 :: 		T1CON         = 0x01;
0x002C	0x3001      	MOVLW      1
0x002D	0x0020      	MOVLB      0
0x002E	0x0098      	MOVWF      T1CON
;Init_up.c,39 :: 		TMR1IF_bit    = 0;
0x002F	0x1011      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;Init_up.c,40 :: 		TMR1H         = 0x63;
0x0030	0x3063      	MOVLW      99
0x0031	0x0097      	MOVWF      TMR1H
;Init_up.c,41 :: 		TMR1L         = 0xC0;
0x0032	0x30C0      	MOVLW      192
0x0033	0x0096      	MOVWF      TMR1L
;Init_up.c,43 :: 		TMR1IE_bit    = 1;
0x0034	0x0021      	MOVLB      1
0x0035	0x1411      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;Init_up.c,44 :: 		INTCON        = 0xC0;
0x0036	0x30C0      	MOVLW      192
0x0037	0x008B      	MOVWF      INTCON
;Init_up.c,50 :: 		}
L_end_Init_uP:
0x0038	0x0008      	RETURN
; end of _Init_uP
_ADC_Init:
;__Lib_ADC_B.c,21 :: 		
;__Lib_ADC_B.c,22 :: 		
0x0039	0x30B7      	MOVLW      _ADC_Get_Sample
0x003A	0x0020      	MOVLB      0
0x003B	0x00A4      	MOVWF      _ADC_Get_Sample_Ptr
0x003C	0x3000      	MOVLW      hi_addr(_ADC_Get_Sample)
0x003D	0x00A5      	MOVWF      _ADC_Get_Sample_Ptr+1
0x003E	0x302C      	MOVLW      FARG_ADC_Get_Sample_channel
0x003F	0x00A6      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0040	0x3000      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
0x0041	0x00A7      	MOVWF      _ADC_Get_Sample_Ptr+3
;__Lib_ADC_B.c,23 :: 		
0x0042	0x30F0      	MOVLW      240
0x0043	0x0021      	MOVLB      1
0x0044	0x009E      	MOVWF      ADCON1
;__Lib_ADC_B.c,24 :: 		
0x0045	0x019D      	CLRF       ADCON0
;__Lib_ADC_B.c,25 :: 		
0x0046	0x141D      	BSF        ADCON0, 0
;__Lib_ADC_B.c,26 :: 		
L_end_ADC_Init:
0x0047	0x0008      	RETURN
; end of _ADC_Init
_Runlight:
;Main.c,111 :: 		void Runlight(void){
;Main.c,115 :: 		io_1 = 0;
0x0048	0x0022      	MOVLB      2
0x0049	0x120E      	BCF        LATC4_bit, BitPos(LATC4_bit+0)
;Main.c,116 :: 		io_2 = 0;
0x004A	0x128E      	BCF        LATC5_bit, BitPos(LATC5_bit+0)
;Main.c,117 :: 		io_3 = 0;
0x004B	0x130E      	BCF        LATC6_bit, BitPos(LATC6_bit+0)
;Main.c,118 :: 		io_4 = 0;
0x004C	0x138E      	BCF        LATC7_bit, BitPos(LATC7_bit+0)
;Main.c,119 :: 		io_5 = 0;
0x004D	0x130D      	BCF        LATB6_bit, BitPos(LATB6_bit+0)
;Main.c,120 :: 		io_6 = 0;
0x004E	0x138D      	BCF        LATB7_bit, BitPos(LATB7_bit+0)
;Main.c,122 :: 		if (PortNr == 0) {  // do nothing
0x004F	0x3000      	MOVLW      0
0x0050	0x0020      	MOVLB      0
0x0051	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x0052	0x1D03      	BTFSS      STATUS, 2
0x0053	0x2856      	GOTO       L__Runlight23
0x0054	0x3000      	MOVLW      0
0x0055	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight23:
0x0056	0x1D03      	BTFSS      STATUS, 2
0x0057	0x2858      	GOTO       L_Runlight3
;Main.c,123 :: 		}
L_Runlight3:
;Main.c,125 :: 		if (PortNr == 1) {
0x0058	0x3000      	MOVLW      0
0x0059	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285E      	GOTO       L__Runlight24
0x005C	0x3001      	MOVLW      1
0x005D	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight24:
0x005E	0x1D03      	BTFSS      STATUS, 2
0x005F	0x2864      	GOTO       L_Runlight4
;Main.c,126 :: 		io_1_Direction = 0;        // Port out
0x0060	0x0021      	MOVLB      1
0x0061	0x120E      	BCF        TRISC4_bit, BitPos(TRISC4_bit+0)
;Main.c,127 :: 		io_1 = 1;
0x0062	0x0022      	MOVLB      2
0x0063	0x160E      	BSF        LATC4_bit, BitPos(LATC4_bit+0)
;Main.c,128 :: 		}
L_Runlight4:
;Main.c,130 :: 		if (PortNr == 2) {
0x0064	0x3000      	MOVLW      0
0x0065	0x0020      	MOVLB      0
0x0066	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x0067	0x1D03      	BTFSS      STATUS, 2
0x0068	0x286B      	GOTO       L__Runlight25
0x0069	0x3002      	MOVLW      2
0x006A	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight25:
0x006B	0x1D03      	BTFSS      STATUS, 2
0x006C	0x2871      	GOTO       L_Runlight5
;Main.c,131 :: 		io_2_Direction = 0;        // Port out
0x006D	0x0021      	MOVLB      1
0x006E	0x128E      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;Main.c,132 :: 		io_2 = 1;
0x006F	0x0022      	MOVLB      2
0x0070	0x168E      	BSF        LATC5_bit, BitPos(LATC5_bit+0)
;Main.c,133 :: 		}
L_Runlight5:
;Main.c,135 :: 		if (PortNr == 3) {
0x0071	0x3000      	MOVLW      0
0x0072	0x0020      	MOVLB      0
0x0073	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x0074	0x1D03      	BTFSS      STATUS, 2
0x0075	0x2878      	GOTO       L__Runlight26
0x0076	0x3003      	MOVLW      3
0x0077	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight26:
0x0078	0x1D03      	BTFSS      STATUS, 2
0x0079	0x287E      	GOTO       L_Runlight6
;Main.c,136 :: 		io_3_Direction = 0;        // Port out
0x007A	0x0021      	MOVLB      1
0x007B	0x130E      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;Main.c,137 :: 		io_3 = 1;
0x007C	0x0022      	MOVLB      2
0x007D	0x170E      	BSF        LATC6_bit, BitPos(LATC6_bit+0)
;Main.c,138 :: 		}
L_Runlight6:
;Main.c,140 :: 		if (PortNr == 4) {
0x007E	0x3000      	MOVLW      0
0x007F	0x0020      	MOVLB      0
0x0080	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x0081	0x1D03      	BTFSS      STATUS, 2
0x0082	0x2885      	GOTO       L__Runlight27
0x0083	0x3004      	MOVLW      4
0x0084	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight27:
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x288B      	GOTO       L_Runlight7
;Main.c,141 :: 		io_4_Direction = 0;        // Port out
0x0087	0x0021      	MOVLB      1
0x0088	0x138E      	BCF        TRISC7_bit, BitPos(TRISC7_bit+0)
;Main.c,142 :: 		io_4 = 1;
0x0089	0x0022      	MOVLB      2
0x008A	0x178E      	BSF        LATC7_bit, BitPos(LATC7_bit+0)
;Main.c,143 :: 		}
L_Runlight7:
;Main.c,145 :: 		if (PortNr == 5) {
0x008B	0x3000      	MOVLW      0
0x008C	0x0020      	MOVLB      0
0x008D	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x008E	0x1D03      	BTFSS      STATUS, 2
0x008F	0x2892      	GOTO       L__Runlight28
0x0090	0x3005      	MOVLW      5
0x0091	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight28:
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x2898      	GOTO       L_Runlight8
;Main.c,146 :: 		io_5_Direction = 0;        // Port out
0x0094	0x0021      	MOVLB      1
0x0095	0x130D      	BCF        TRISB6_bit, BitPos(TRISB6_bit+0)
;Main.c,147 :: 		io_5 = 1;
0x0096	0x0022      	MOVLB      2
0x0097	0x170D      	BSF        LATB6_bit, BitPos(LATB6_bit+0)
;Main.c,148 :: 		}
L_Runlight8:
;Main.c,150 :: 		if (PortNr == 6) {
0x0098	0x3000      	MOVLW      0
0x0099	0x0020      	MOVLB      0
0x009A	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x009B	0x1D03      	BTFSS      STATUS, 2
0x009C	0x289F      	GOTO       L__Runlight29
0x009D	0x3006      	MOVLW      6
0x009E	0x0620      	XORWF      Runlight_PortNr_L0, 0
L__Runlight29:
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A5      	GOTO       L_Runlight9
;Main.c,151 :: 		io_6_Direction = 0;        // Port out
0x00A1	0x0021      	MOVLB      1
0x00A2	0x138D      	BCF        TRISB7_bit, BitPos(TRISB7_bit+0)
;Main.c,152 :: 		io_6 = 1;
0x00A3	0x0022      	MOVLB      2
0x00A4	0x178D      	BSF        LATB7_bit, BitPos(LATB7_bit+0)
;Main.c,153 :: 		}
L_Runlight9:
;Main.c,155 :: 		if (++PortNr > 6) PortNr= 0;
0x00A5	0x0020      	MOVLB      0
0x00A6	0x0AA0      	INCF       Runlight_PortNr_L0, 1
0x00A7	0x1903      	BTFSC      STATUS, 2
0x00A8	0x0AA1      	INCF       Runlight_PortNr_L0+1, 1
0x00A9	0x3080      	MOVLW      128
0x00AA	0x00F0      	MOVWF      R0
0x00AB	0x3080      	MOVLW      128
0x00AC	0x0621      	XORWF      Runlight_PortNr_L0+1, 0
0x00AD	0x0270      	SUBWF      R0, 0
0x00AE	0x1D03      	BTFSS      STATUS, 2
0x00AF	0x28B2      	GOTO       L__Runlight30
0x00B0	0x0820      	MOVF       Runlight_PortNr_L0, 0
0x00B1	0x3C06      	SUBLW      6
L__Runlight30:
0x00B2	0x1803      	BTFSC      STATUS, 0
0x00B3	0x28B6      	GOTO       L_Runlight10
0x00B4	0x01A0      	CLRF       Runlight_PortNr_L0
0x00B5	0x01A1      	CLRF       Runlight_PortNr_L0+1
L_Runlight10:
;Main.c,157 :: 		}
L_end_Runlight:
0x00B6	0x0008      	RETURN
; end of _Runlight
_ADC_Get_Sample:
;__Lib_ADC_B.c,47 :: 		
;__Lib_ADC_B.c,48 :: 		
0x00B7	0x3083      	MOVLW      131
0x00B8	0x0021      	MOVLB      1
0x00B9	0x059D      	ANDWF      ADCON0, 1
;__Lib_ADC_B.c,49 :: 		
0x00BA	0x0020      	MOVLB      0
0x00BB	0x082C      	MOVF       FARG_ADC_Get_Sample_channel, 0
0x00BC	0x00F0      	MOVWF      R0
0x00BD	0x35F0      	LSLF       R0, 1
0x00BE	0x35F0      	LSLF       R0, 1
0x00BF	0x0870      	MOVF       R0, 0
0x00C0	0x0021      	MOVLB      1
0x00C1	0x049D      	IORWF       ADCON0, 1
;__Lib_ADC_B.c,52 :: 		
0x00C2	0x2011      	CALL       _Delay_22us
;__Lib_ADC_B.c,55 :: 		
0x00C3	0x149D      	BSF        ADCON0, 1
;__Lib_ADC_B.c,58 :: 		
L_ADC_Get_Sample4:
0x00C4	0x1C9D      	BTFSS      ADCON0, 1
0x00C5	0x28C7      	GOTO       L_ADC_Get_Sample5
;__Lib_ADC_B.c,59 :: 		
0x00C6	0x28C4      	GOTO       L_ADC_Get_Sample4
L_ADC_Get_Sample5:
;__Lib_ADC_B.c,61 :: 		
0x00C7	0x081C      	MOVF       ADRESH, 0
0x00C8	0x00F1      	MOVWF      R1
0x00C9	0x01F0      	CLRF       R0
0x00CA	0x081B      	MOVF       ADRESL, 0
0x00CB	0x04F0      	IORWF       R0, 1
0x00CC	0x3000      	MOVLW      0
0x00CD	0x04F1      	IORWF       R1, 1
;__Lib_ADC_B.c,62 :: 		
L_end_ADC_Get_Sample:
0x00CE	0x0008      	RETURN
; end of _ADC_Get_Sample
_Div_16X16_U:
;__Lib_Math.c,213 :: 		
;__Lib_Math.c,220 :: 		
0x00CF	0x0020      	MOVLB      0
;__Lib_Math.c,221 :: 		
0x00D0	0x01F8      	CLRF       R8
;__Lib_Math.c,222 :: 		
0x00D1	0x01F9      	CLRF       R9
;__Lib_Math.c,223 :: 		
0x00D2	0x3010      	MOVLW      16
;__Lib_Math.c,224 :: 		
0x00D3	0x00FC      	MOVWF      R12
;__Lib_Math.c,225 :: 		
0x00D4	0x0D71      	RLF        R1, 0
;__Lib_Math.c,226 :: 		
0x00D5	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,227 :: 		
0x00D6	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,228 :: 		
0x00D7	0x0874      	MOVF       R4, 0
;__Lib_Math.c,229 :: 		
0x00D8	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,230 :: 		
0x00D9	0x0875      	MOVF       R5, 0
;__Lib_Math.c,231 :: 		
0x00DA	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,232 :: 		
0x00DB	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,233 :: 		
0x00DC	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,234 :: 		
0x00DD	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,235 :: 		
0x00DE	0x28E6      	GOTO       $+8
;__Lib_Math.c,236 :: 		
0x00DF	0x0874      	MOVF       R4, 0
;__Lib_Math.c,237 :: 		
0x00E0	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,238 :: 		
0x00E1	0x0875      	MOVF       R5, 0
;__Lib_Math.c,239 :: 		
0x00E2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,240 :: 		
0x00E3	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,241 :: 		
0x00E4	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,242 :: 		
0x00E5	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,243 :: 		
0x00E6	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,244 :: 		
0x00E7	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,245 :: 		
0x00E8	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,246 :: 		
0x00E9	0x28D4      	GOTO       $-21
;__Lib_Math.c,248 :: 		
L_end_Div_16X16_U:
0x00EA	0x0008      	RETURN
; end of _Div_16X16_U
_main:
0x00EB	0x0020      	MOVLB      0
0x00EC	0x01A0      	CLRF       Runlight_PortNr_L0
0x00ED	0x01A1      	CLRF       33
0x00EE	0x01A2      	CLRF       _guiTimer10ms
0x00EF	0x01A3      	CLRF       35
;Main.c,177 :: 		void main(void)
;Main.c,181 :: 		Init_uP();
0x00F0	0x201F      	CALL       _Init_uP
;Main.c,182 :: 		delay_ms(1000);             //stable clock !!?? 200ms ok, 1s just for visual check
0x00F1	0x3015      	MOVLW      21
0x00F2	0x00FB      	MOVWF      R11
0x00F3	0x304B      	MOVLW      75
0x00F4	0x00FC      	MOVWF      R12
0x00F5	0x30BE      	MOVLW      190
0x00F6	0x00FD      	MOVWF      R13
L_main12:
0x00F7	0x0BFD      	DECFSZ     R13, 1
0x00F8	0x28F7      	GOTO       L_main12
0x00F9	0x0BFC      	DECFSZ     R12, 1
0x00FA	0x28F7      	GOTO       L_main12
0x00FB	0x0BFB      	DECFSZ     R11, 1
0x00FC	0x28F7      	GOTO       L_main12
0x00FD	0x0000      	NOP
;Main.c,184 :: 		ADC_Init();
0x00FE	0x2039      	CALL       _ADC_Init
;Main.c,188 :: 		ANSB4_bit = 1;   // P1
0x00FF	0x0023      	MOVLB      3
0x0100	0x160D      	BSF        ANSB4_bit, BitPos(ANSB4_bit+0)
;Main.c,189 :: 		ANSC3_bit = 1;   // P2
0x0101	0x158E      	BSF        ANSC3_bit, BitPos(ANSC3_bit+0)
;Main.c,190 :: 		ANSC2_bit = 1;   // P3
0x0102	0x150E      	BSF        ANSC2_bit, BitPos(ANSC2_bit+0)
;Main.c,192 :: 		TMR1IE_bit = 1;   // Enable timer interrupt
0x0103	0x0021      	MOVLB      1
0x0104	0x1411      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;Main.c,193 :: 		GIE_bit = 1;        // Enable global interrupt
0x0105	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Main.c,195 :: 		StatusLed_Direction = 0; // Out
0x0106	0x128D      	BCF        TRISB5_bit, BitPos(TRISB5_bit+0)
;Main.c,196 :: 		while ( 1 ) {
L_main13:
;Main.c,198 :: 		StatusLed = ~StatusLed;
0x0107	0x3020      	MOVLW      32
0x0108	0x0022      	MOVLB      2
0x0109	0x068D      	XORWF      LATB5_bit, 1
;Main.c,199 :: 		Runlight();
0x010A	0x2048      	CALL       _Runlight
;Main.c,201 :: 		P1 = ADC_Get_Sample(Poti3);
0x010B	0x300A      	MOVLW      10
0x010C	0x00AC      	MOVWF      FARG_ADC_Get_Sample_channel
0x010D	0x20B7      	CALL       _ADC_Get_Sample
0x010E	0x0870      	MOVF       R0, 0
0x010F	0x0020      	MOVLB      0
0x0110	0x00A8      	MOVWF      _P1
0x0111	0x0871      	MOVF       R1, 0
0x0112	0x00A9      	MOVWF      _P1+1
;Main.c,202 :: 		for (i = 0; i < P1; i++){
0x0113	0x01AA      	CLRF       main_i_L0
0x0114	0x01AB      	CLRF       main_i_L0+1
L_main15:
0x0115	0x0829      	MOVF       _P1+1, 0
0x0116	0x022B      	SUBWF      main_i_L0+1, 0
0x0117	0x1D03      	BTFSS      STATUS, 2
0x0118	0x291B      	GOTO       L__main35
0x0119	0x0828      	MOVF       _P1, 0
0x011A	0x022A      	SUBWF      main_i_L0, 0
L__main35:
0x011B	0x1803      	BTFSC      STATUS, 0
0x011C	0x293B      	GOTO       L_main16
;Main.c,203 :: 		P1 = (P1 + ADC_Get_Sample(Poti3)) / 2;        // "Oversampling"
0x011D	0x300A      	MOVLW      10
0x011E	0x00AC      	MOVWF      FARG_ADC_Get_Sample_channel
0x011F	0x20B7      	CALL       _ADC_Get_Sample
0x0120	0x0020      	MOVLB      0
0x0121	0x0828      	MOVF       _P1, 0
0x0122	0x07F0      	ADDWF      R0, 1
0x0123	0x0829      	MOVF       _P1+1, 0
0x0124	0x3DF1      	ADDWFC     R1, 1
0x0125	0x3002      	MOVLW      2
0x0126	0x00F4      	MOVWF      R4
0x0127	0x3000      	MOVLW      0
0x0128	0x00F5      	MOVWF      R5
0x0129	0x20CF      	CALL       _Div_16X16_U
0x012A	0x0870      	MOVF       R0, 0
0x012B	0x00A8      	MOVWF      _P1
0x012C	0x0871      	MOVF       R1, 0
0x012D	0x00A9      	MOVWF      _P1+1
;Main.c,204 :: 		delay_ms(1);
0x012E	0x3006      	MOVLW      6
0x012F	0x00FC      	MOVWF      R12
0x0130	0x3030      	MOVLW      48
0x0131	0x00FD      	MOVWF      R13
L_main18:
0x0132	0x0BFD      	DECFSZ     R13, 1
0x0133	0x2932      	GOTO       L_main18
0x0134	0x0BFC      	DECFSZ     R12, 1
0x0135	0x2932      	GOTO       L_main18
0x0136	0x0000      	NOP
;Main.c,202 :: 		for (i = 0; i < P1; i++){
0x0137	0x0AAA      	INCF       main_i_L0, 1
0x0138	0x1903      	BTFSC      STATUS, 2
0x0139	0x0AAB      	INCF       main_i_L0+1, 1
;Main.c,205 :: 		}
0x013A	0x2915      	GOTO       L_main15
L_main16:
;Main.c,207 :: 		} // Mainloop end
0x013B	0x2907      	GOTO       L_main13
;Main.c,209 :: 		} /*- main end ---------------------------------------------------------------*/
L_end_main:
0x013C	0x293C      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [13]    _interrupt
0x0011       [5]    _Delay_22us
0x0016       [9]    ___CC2DW
0x001F      [26]    _Init_uP
0x0039      [15]    _ADC_Init
0x0048     [111]    _Runlight
0x00B7      [24]    _ADC_Get_Sample
0x00CF      [28]    _Div_16X16_U
0x00EB      [82]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [1]    INTCON
0x000C       [1]    PORTA
0x000E       [1]    PORTC
0x0011       [0]    TMR1IF_bit
0x0016       [1]    TMR1L
0x0017       [1]    TMR1H
0x0018       [1]    T1CON
0x0020       [2]    Runlight_PortNr_L0
0x0022       [2]    _guiTimer10ms
0x0024       [4]    _ADC_Get_Sample_Ptr
0x0028       [2]    _P1
0x002A       [2]    main_i_L0
0x002C       [1]    FARG_ADC_Get_Sample_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008D       [0]    io_5_Direction
0x008D       [0]    io_6_Direction
0x008D       [0]    StatusLed_Direction
0x008D       [0]    TRISB6_bit
0x008D       [0]    TRISB7_bit
0x008D       [0]    TRISB5_bit
0x008E       [0]    io_4_Direction
0x008E       [0]    TRISC4_bit
0x008E       [0]    io_2_Direction
0x008E       [0]    io_1_Direction
0x008E       [0]    io_3_Direction
0x008E       [0]    TRISC7_bit
0x008E       [0]    TRISC5_bit
0x008E       [0]    TRISC6_bit
0x0091       [0]    TMR1IE_bit
0x0095       [1]    OPTION_REG
0x0099       [1]    OSCCON
0x009B       [1]    ADRESL
0x009C       [1]    ADRESH
0x009D       [1]    ADCON0
0x009E       [1]    ADCON1
0x010D       [0]    StatusLed
0x010D       [0]    LATB5_bit
0x010D       [0]    LATB6_bit
0x010D       [0]    LATB7_bit
0x010D       [0]    io_5
0x010D       [0]    io_6
0x010E       [0]    LATC6_bit
0x010E       [0]    LATC7_bit
0x010E       [0]    io_4
0x010E       [0]    io_3
0x010E       [0]    LATC4_bit
0x010E       [0]    io_1
0x010E       [0]    LATC5_bit
0x010E       [0]    io_2
0x018C       [1]    ANSELA
0x018D       [0]    ANSB4_bit
0x018E       [0]    ANSC2_bit
0x018E       [0]    ANSC3_bit
0x018E       [1]    ANSELC
0x020C       [1]    WPUA
